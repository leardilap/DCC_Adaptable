	component de2i_150_qsys is
		port (
			clk_clk                                    : in  std_logic                     := 'X';             -- clk
			reset_reset_n                              : in  std_logic                     := 'X';             -- reset_n
			pcie_ip_reconfig_togxb_data                : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- data
			pcie_ip_refclk_export                      : in  std_logic                     := 'X';             -- export
			pcie_ip_test_in_test_in                    : in  std_logic_vector(39 downto 0) := (others => 'X'); -- test_in
			pcie_ip_pcie_rstn_export                   : in  std_logic                     := 'X';             -- export
			pcie_ip_clocks_sim_clk250_export           : out std_logic;                                        -- clk250_export
			pcie_ip_clocks_sim_clk500_export           : out std_logic;                                        -- clk500_export
			pcie_ip_clocks_sim_clk125_export           : out std_logic;                                        -- clk125_export
			pcie_ip_reconfig_busy_busy_altgxb_reconfig : in  std_logic                     := 'X';             -- busy_altgxb_reconfig
			pcie_ip_pipe_ext_pipe_mode                 : in  std_logic                     := 'X';             -- pipe_mode
			pcie_ip_pipe_ext_phystatus_ext             : in  std_logic                     := 'X';             -- phystatus_ext
			pcie_ip_pipe_ext_rate_ext                  : out std_logic;                                        -- rate_ext
			pcie_ip_pipe_ext_powerdown_ext             : out std_logic_vector(1 downto 0);                     -- powerdown_ext
			pcie_ip_pipe_ext_txdetectrx_ext            : out std_logic;                                        -- txdetectrx_ext
			pcie_ip_pipe_ext_rxelecidle0_ext           : in  std_logic                     := 'X';             -- rxelecidle0_ext
			pcie_ip_pipe_ext_rxdata0_ext               : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata0_ext
			pcie_ip_pipe_ext_rxstatus0_ext             : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus0_ext
			pcie_ip_pipe_ext_rxvalid0_ext              : in  std_logic                     := 'X';             -- rxvalid0_ext
			pcie_ip_pipe_ext_rxdatak0_ext              : in  std_logic                     := 'X';             -- rxdatak0_ext
			pcie_ip_pipe_ext_txdata0_ext               : out std_logic_vector(7 downto 0);                     -- txdata0_ext
			pcie_ip_pipe_ext_txdatak0_ext              : out std_logic;                                        -- txdatak0_ext
			pcie_ip_pipe_ext_rxpolarity0_ext           : out std_logic;                                        -- rxpolarity0_ext
			pcie_ip_pipe_ext_txcompl0_ext              : out std_logic;                                        -- txcompl0_ext
			pcie_ip_pipe_ext_txelecidle0_ext           : out std_logic;                                        -- txelecidle0_ext
			pcie_ip_rx_in_rx_datain_0                  : in  std_logic                     := 'X';             -- rx_datain_0
			pcie_ip_tx_out_tx_dataout_0                : out std_logic;                                        -- tx_dataout_0
			pcie_ip_reconfig_fromgxb_0_data            : out std_logic_vector(4 downto 0);                     -- data
			led_external_connection_export             : out std_logic_vector(3 downto 0);                     -- export
			button_external_connection_export          : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			fir_memory_s2_address                      : in  std_logic_vector(9 downto 0)  := (others => 'X'); -- address
			fir_memory_s2_chipselect                   : in  std_logic                     := 'X';             -- chipselect
			fir_memory_s2_clken                        : in  std_logic                     := 'X';             -- clken
			fir_memory_s2_write                        : in  std_logic                     := 'X';             -- write
			fir_memory_s2_readdata                     : out std_logic_vector(31 downto 0);                    -- readdata
			fir_memory_s2_writedata                    : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			fir_memory_s2_byteenable                   : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			fir_memory_clk2_clk                        : in  std_logic                     := 'X';             -- clk
			fir_memory_reset2_reset                    : in  std_logic                     := 'X';             -- reset
			fir_memory_reset2_reset_req                : in  std_logic                     := 'X';             -- reset_req
			interpo_4_0_s2_address                     : in  std_logic_vector(4 downto 0)  := (others => 'X'); -- address
			interpo_4_0_s2_chipselect                  : in  std_logic                     := 'X';             -- chipselect
			interpo_4_0_s2_clken                       : in  std_logic                     := 'X';             -- clken
			interpo_4_0_s2_write                       : in  std_logic                     := 'X';             -- write
			interpo_4_0_s2_readdata                    : out std_logic_vector(31 downto 0);                    -- readdata
			interpo_4_0_s2_writedata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			interpo_4_0_s2_byteenable                  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			interpo_4_0_clk2_clk                       : in  std_logic                     := 'X';             -- clk
			interpo_4_0_reset2_reset                   : in  std_logic                     := 'X';             -- reset
			interpo_4_0_reset2_reset_req               : in  std_logic                     := 'X';             -- reset_req
			interpo_5_0_s2_address                     : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- address
			interpo_5_0_s2_chipselect                  : in  std_logic                     := 'X';             -- chipselect
			interpo_5_0_s2_clken                       : in  std_logic                     := 'X';             -- clken
			interpo_5_0_s2_write                       : in  std_logic                     := 'X';             -- write
			interpo_5_0_s2_readdata                    : out std_logic_vector(31 downto 0);                    -- readdata
			interpo_5_0_s2_writedata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			interpo_5_0_s2_byteenable                  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			interpo_5_0_clk2_clk                       : in  std_logic                     := 'X';             -- clk
			interpo_5_0_reset2_reset                   : in  std_logic                     := 'X';             -- reset
			interpo_5_0_reset2_reset_req               : in  std_logic                     := 'X';             -- reset_req
			interpo_5_1_clk2_clk                       : in  std_logic                     := 'X';             -- clk
			interpo_5_1_s2_address                     : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- address
			interpo_5_1_s2_chipselect                  : in  std_logic                     := 'X';             -- chipselect
			interpo_5_1_s2_clken                       : in  std_logic                     := 'X';             -- clken
			interpo_5_1_s2_write                       : in  std_logic                     := 'X';             -- write
			interpo_5_1_s2_readdata                    : out std_logic_vector(31 downto 0);                    -- readdata
			interpo_5_1_s2_writedata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			interpo_5_1_s2_byteenable                  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			interpo_5_1_reset2_reset                   : in  std_logic                     := 'X';             -- reset
			interpo_5_1_reset2_reset_req               : in  std_logic                     := 'X';             -- reset_req
			interpo_5_2_s2_address                     : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- address
			interpo_5_2_s2_chipselect                  : in  std_logic                     := 'X';             -- chipselect
			interpo_5_2_s2_clken                       : in  std_logic                     := 'X';             -- clken
			interpo_5_2_s2_write                       : in  std_logic                     := 'X';             -- write
			interpo_5_2_s2_readdata                    : out std_logic_vector(31 downto 0);                    -- readdata
			interpo_5_2_s2_writedata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			interpo_5_2_s2_byteenable                  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			interpo_5_2_clk2_clk                       : in  std_logic                     := 'X';             -- clk
			interpo_5_2_reset2_reset                   : in  std_logic                     := 'X';             -- reset
			interpo_5_2_reset2_reset_req               : in  std_logic                     := 'X';             -- reset_req
			interpo_5_3_s2_address                     : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- address
			interpo_5_3_s2_chipselect                  : in  std_logic                     := 'X';             -- chipselect
			interpo_5_3_s2_clken                       : in  std_logic                     := 'X';             -- clken
			interpo_5_3_s2_write                       : in  std_logic                     := 'X';             -- write
			interpo_5_3_s2_readdata                    : out std_logic_vector(31 downto 0);                    -- readdata
			interpo_5_3_s2_writedata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			interpo_5_3_s2_byteenable                  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			interpo_5_3_clk2_clk                       : in  std_logic                     := 'X';             -- clk
			interpo_5_3_reset2_reset                   : in  std_logic                     := 'X';             -- reset
			interpo_5_3_reset2_reset_req               : in  std_logic                     := 'X'              -- reset_req
		);
	end component de2i_150_qsys;

